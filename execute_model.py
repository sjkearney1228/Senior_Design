# -*- coding: utf-8 -*-
"""Execute_Model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/194EZ1riKMKsuwYzZ265V6LAh4GvDFrcf
"""

import os
import tensorflow.keras

import cv2
import glob
import os
import numpy as np
from keras.utils import to_categorical

import keras
import h5py
from keras.models import model_from_json

# load json and create model
#json_file = open('model.json', 'r')
json_file = open('VGG_ASL.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)
# load weights into new model
#loaded_model.load_weights("model.h5")
loaded_model.load_weights("VGG_ASL_weight.h5")
print("Loaded model from disk")

np.random.seed(1)
X_data = []

files = sorted(glob.glob ('/content/gdrive/MyDrive/ColabNotebooks/Test_spectrogram/*/*.png'))

for myFile in files:
  print(myFile)
  image = cv2.imread(myFile)
  image = cv2.resize(image, (128,128), interpolation = cv2.INTER_AREA)
  X_data.append (image)

print('X_data shape:', np.array(X_data).shape)

X_test=np.array(X_data)
import keras
X_test = X_test/255.


print ("number of test examples = " + str(X_test.shape[0]))
print ("X_test shape: " + str(X_test.shape))

from keras import optimizers
LEARNING_RATE = 1e-4

# evaluate loaded model on test data
loaded_model.compile(loss='categorical_crossentropy', optimizer=optimizers.Adam(lr=LEARNING_RATE), metrics=['categorical_accuracy'])

preds = loaded_model.predict(X_test)

motion_class = np.argmax(preds,axis=1)

print(motion_class)

# if motion_class == [0]: print("Walking towards radar")
# elif motion_class == [1]: print("Walking away from radar")
# elif motion_class == [2]: print("Picking up an Object")
# elif motion_class == [3]: print("Bending")
# elif motion_class == [4]: print("Sitting")
# elif motion_class == [5]: print("Kneeling")
# elif motion_class == [6]: print("Crawling")
# elif motion_class == [7]: print("Walking on both toes")
# elif motion_class == [8]: print("Limping with RL stiff")
# elif motion_class == [9]: print("Short steps")
# elif motion_class == [10]: print("Scissor Gait")